---

- name: Check img exists
  stat:
    path: "/usr/bin/img"
  register: old_img_installed

- name: Delete img if exists
  file:
    path: "{{ item.stat.path }}"
    state: absent
  with_items:
    - "{{ old_img_installed }}"
  when: item.stat.exists | bool
  changed_when: false

- name: get latest img version
  shell: |
    set -o pipefail
    curl -sSL https://api.github.com/repos/genuinetools/img/releases | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | head -n1
  args:
      executable: /bin/bash
  become: true
  register: new_img_version
  changed_when: false

- name: Get img download checksum
  shell: |
    set -o pipefail
    curl -sSL https://github.com/genuinetools/img/releases/download/{{ new_img_version.stdout }}/img-linux-amd64.sha256 | awk '{print $1}'
  args:
      executable: /bin/bash
  become: true
  register: new_img_checksum
  changed_when: false

- name: Install latest img
  get_url:
    url: https://github.com/genuinetools/img/releases/download/{{ new_img_version.stdout }}/img-linux-amd64
    dest: "/usr/bin/img"
    mode: 0755
    checksum: sha256:{{ new_img_checksum.stdout }}
  changed_when: false
